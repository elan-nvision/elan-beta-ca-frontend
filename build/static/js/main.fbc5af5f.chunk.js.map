{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["globalRootURL","window","location","host","AUTH0_CALLBACK_URL","App","state","loggedIn","renderBody","bind","setup","parseHash","setState","this","auth0","WebAuth","domain","clientID","err","authResult","console","log","accessToken","idToken","localStorage","setItem","JSON","stringify","idTokenPayload","href","substr","indexOf","$","ajaxSetup","beforeSend","xhr","getItem","setRequestHeader","undefined","className","React","Component","Home","props","authenticate","scope","audience","responseType","redirectUri","authorize","id","style","paddingTop","textAlign","Button","color","marginTop","onClick","LoggedIn","firstTime","fname","lname","institute","age","points","no_of_people","rcode","fbHandle","instaHandle","ideas","handleInputChange","renderForm","renderPoints","submitForm","getData","logout","requestURL","parse","email","axios","get","then","res","data","message","event","target","value","type","checked","name","headers","authorization","url","catch","error","clear","reload","preventDefault","Form","onSubmit","Row","form","Col","md","FormGroup","Input","placeholder","onChange","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbc5af5f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, FormGroup, Col, Input, Row, Button } from \"reactstrap\";\nimport $ from \"jquery\";\nimport auth0 from \"auth0-js\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { thisExpression } from \"@babel/types\";\n\nlet globalRootURL = \"http://\" + window.location.host;\n\nconst AUTH0_CLIENT_ID = \"7ypOoXT5lMAP6B3LRvGJoD3eK0tBTrai\";\nconst AUTH0_DOMAIN = \"elan-nvision.auth0.com\";\nconst AUTH0_API_AUDIENCE = \"https://elan-nvision.auth0.com/api/v2/\";\nconst AUTH0_CALLBACK_URL = globalRootURL;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = { loggedIn: null };\n    this.renderBody = this.renderBody.bind(this);\n    this.setup();\n    this.parseHash();\n    this.setState();\n  }\n  parseHash() {\n    this.auth0 = new auth0.WebAuth({\n      domain: AUTH0_DOMAIN,\n      clientID: AUTH0_CLIENT_ID\n    });\n    this.auth0.parseHash((err, authResult) => {\n      if (err) {\n        return console.log(err);\n      }\n      if (\n        authResult !== null &&\n        authResult.accessToken !== null &&\n        authResult.idToken !== null\n      ) {\n        localStorage.setItem(\"access_token\", authResult.accessToken);\n        localStorage.setItem(\"id_token\", authResult.idToken);\n        localStorage.setItem(\n          \"email\",\n          JSON.stringify(authResult.idTokenPayload)\n        );\n        window.location = window.location.href.substr(\n          0,\n          window.location.href.indexOf(\"\")\n        );\n      }\n    });\n  }\n  setup() {\n    $.ajaxSetup({\n      beforeSend: function(xhr) {\n        if (localStorage.getItem(\"access_token\")) {\n          xhr.setRequestHeader(\n            \"Authorization\",\n            \"Bearer \" + localStorage.getItem(\"access_token\")\n          );\n        }\n      }\n    });\n  }\n  setState() {\n    let idToken = localStorage.getItem(\"id_token\");\n    if (idToken) {\n      this.state.loggedIn = true;\n    } else {\n      this.state.loggedIn = false;\n    }\n  }\n  // componentWillMount() {\n  //   this.setup();\n  //   this.parseHash();\n  //   this.setState();\n  // }\n  renderBody() {\n    if (this.state.loggedIn) return <LoggedIn />;\n    else return <Home />;\n  }\n\n  render() {\n    return this.state.loggedIn === undefined ? (\n      <div className=\"loader\">Loading</div>\n    ) : (\n      <this.renderBody />\n    );\n  }\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authenticate = this.authenticate.bind(this);\n  }\n  authenticate() {\n    this.WebAuth = new auth0.WebAuth({\n      domain: AUTH0_DOMAIN,\n      clientID: AUTH0_CLIENT_ID,\n      scope: \"openid email\",\n      audience: AUTH0_API_AUDIENCE,\n      responseType: \"token id_token\",\n      redirectUri: AUTH0_CALLBACK_URL\n    });\n    this.WebAuth.authorize();\n  }\n\n  render() {\n    return (\n      <div id=\"fh5co-couple\" style={{ paddingTop: \"20px\" }}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 col-md-offset-2 text-center fh5co-heading animate-box\">\n              <h2>Elan & nVision 2020</h2>\n              <h3>Registration Portal for Campus Ambassadors</h3>\n              <p style={{ textAlign: \"left\" }}>\n                This is an invitation to the college janta of the city to become\n                the Campus Ambassadors of ELAN & nVision 2020. The Campus\n                Ambassador program provides you with an opportunity to be more\n                closely associated with the fest than just another participant.\n                A Campus Ambassador will be the first contact between ELAN and\n                nVision 2020 and his/her college.{\" \"}\n              </p>\n              <p style={{ textAlign: \"left\" }}>\n                The responsibilities of a Campus Ambassador are:\n              </p>\n              <ul style={{ textAlign: \"left\" }}>\n                <li>\n                  Spread awareness regarding the fest in your institute via\n                  offline and online publicity of the events- ones that happen\n                  before the fest and during the fest.{\" \"}\n                </li>\n                <li>\n                  Encourage and ensure participation from your institutes in the\n                  events of the fest in ways you deem fit.\n                </li>\n                <li>\n                  Perform different tasks aimed at promoting the fest which will\n                  be allocated to you from time to time.\n                </li>\n                <li>Help Elan & nVision organise events in your college.</li>\n              </ul>\n              <p style={{ textAlign: \"left\" }}>\n                About the structure of the program:{\" \"}\n              </p>\n              <ul style={{ textAlign: \"left\" }}>\n                <li>\n                  Interested individuals may register at the link provided\n                  above. The applicants will be shortlisted by our team and the\n                  selected Campus Ambassadors will be mailed.{\" \"}\n                </li>\n                <li>\n                  Campus ambassadors will be awarded certain points for each\n                  task they complete\n                </li>\n                <li>\n                  The registered campus ambassadors will be provided with a\n                  unique referral code which can be used to login to the CA\n                  portal and view the leaderboard. The CA portal will be updated\n                  regularly with new tasks.{\" \"}\n                </li>\n                <li>\n                  The tasks are aimed at increasing the social presence and\n                  outreach of the fest through different institutes.\n                </li>\n              </ul>\n              <p style={{ textAlign: \"left\" }}>Eligibility:</p>\n              <ul style={{ textAlign: \"left\" }}>\n                <li>Age requirement: 17 or above.</li>\n                <li>Good communication, management and soft skills. </li>\n                <li>\n                  Must be enrolled in an educational institute. (school or\n                  college)\n                </li>\n              </ul>\n              <p style={{ textAlign: \"left\" }}>Incentives:</p>\n              <ul style={{ textAlign: \"left\" }}>\n                <li>Cash prizes</li>\n                <li>\n                  Elan & nVision merchandise as you cross milestones on the\n                  leaderboard\n                </li>\n                <li>Free passes to the events of the fest</li>\n                <li>Free stay provided by Elan & nVision during the fest</li>\n                <li>\n                  Top performing CAs will receive recognition on our social\n                  media platforms and official website\n                </li>\n                <li>Certificates from Elan&nVision IIT Hyderabad</li>\n              </ul>\n              <Button\n                color=\"primary\"\n                style={{ marginTop: \"30px\" }}\n                onClick={this.authenticate}\n              >\n                Register Now\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass LoggedIn extends React.Component {\n  state = {\n    firstTime: null,\n    fname: \"\",\n    lname: \"\",\n    institute: \"\",\n    age: null,\n    points: null,\n    no_of_people: null,\n    rcode: null,\n    fbHandle: \"\",\n    instaHandle: \"\",\n    ideas: \"\"\n  };\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderPoints = this.renderPoints.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.getData = this.getData.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n  componentDidMount() {\n    let requestURL =\n      \"https://ca.elan.org.in/doesuserexist/\" +\n      JSON.parse(localStorage.getItem(\"email\")).email;\n    axios.get(requestURL).then(res => {\n      this.setState({ firstTime: !(res.data.message == \"true\") });\n    });\n  }\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n  getData() {\n    const headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\n      }\n    };\n    let url =\n      \"https://ca.elan.org.in/api/private?token=\" +\n      localStorage.getItem(\"id_token\");\n    axios\n      .get(url, headers)\n      .then(res => {\n        this.setState({\n          fname: res.data.fname,\n          lname: res.data.lname,\n          no_of_people: res.data.no_of_people,\n          points: res.data.points,\n          rcode: res.data.rcode\n        });\n      })\n      .catch(error => {\n        localStorage.clear();\n        window.location.reload();\n      });\n  }\n  submitForm(event) {\n    event.preventDefault();\n    const headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\n      }\n    };\n    let url =\n      \"https://ca.elan.org.in/api/private?fname=\" +\n      this.state.fname +\n      \"&lname=\" +\n      this.state.lname +\n      \"&institute=\" +\n      this.state.institute +\n      \"&age=\" +\n      this.state.age +\n      \"&token=\" +\n      localStorage.getItem(\"id_token\") +\n      \"&fb=\" +\n      this.state.fbHandle +\n      \"&insta=\" +\n      this.state.instaHandle +\n      \"&ideas=\" +\n      this.state.ideas;\n    axios\n      .get(url, headers)\n      .then(res => {\n        window.location.reload();\n      })\n      .catch(error => {\n        localStorage.clear();\n        window.location.reload();\n      });\n  }\n\n  renderForm() {\n    return (\n      <div id=\"fh5co-couple\" style={{ paddingTop: \"20px\" }}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 col-md-offset-2 text-center fh5co-heading animate-box\">\n              <h2>Registration Portal</h2>\n              <h3>For Campus Ambassadors</h3>\n              <Form style={{ marginTop: \"50px\" }} onSubmit={this.submitForm}>\n                <Row form>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"fname\"\n                        value={this.state.fname}\n                        placeholder=\"First Name\"\n                        onChange={this.handleInputChange}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"lname\"\n                        value={this.state.lname}\n                        placeholder=\"Last Name\"\n                        onChange={this.handleInputChange}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row form>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"institute\"\n                        placeholder=\"Institute\"\n                        value={this.state.institute}\n                        onChange={this.handleInputChange}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"age\"\n                        value={this.state.age}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Age\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row form>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"fbHandle\"\n                        placeholder=\"Link to your Facebook Profile\"\n                        value={this.state.fbHandle}\n                        onChange={this.handleInputChange}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"instaHandle\"\n                        value={this.state.instaHandle}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Instagram Handle\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                      <Input\n                        type=\"textarea\"\n                        name=\"ideas\"\n                        placeholder=\"What are your ideas for publicising the fest?\"\n                        value={this.state.ideas}\n                        onChange={this.handleInputChange}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Button color=\"primary\" style={{ marginTop: \"30px\" }}>\n                    Submit\n                  </Button>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  logout() {\n    localStorage.clear();\n    window.location.reload();\n  }\n  renderPoints() {\n    if (this.state.no_of_people == null) {\n      this.getData();\n      return <p>Loading</p>;\n    } else {\n      return (\n        <div id=\"fh5co-couple\" style={{ paddingTop: \"20px\" }}>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 col-md-offset-2 text-center fh5co-heading animate-box\">\n                <h2>Elan & nVision 2020</h2>\n                <h3 style={{ marginTop: \"40px\" }}>\n                  Welcome, {this.state.fname} {this.state.lname}\n                </h3>\n                {/* <h4>Your referral code is {this.state.rcode}.</h4>\n                <h4>\n                  You have been awarded {this.state.points} points since{\" \"}\n                  {this.state.no_of_people} people have used your referral code.\n                </h4> */}\n                <h4>\n                  Thanks for your application. We will get back to you soon!\n                </h4>\n                <Button color=\"primary\" onClick={this.logout}>\n                  LOGOUT\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  render() {\n    if (this.state.firstTime === true) {\n      return <this.renderForm />;\n    } else if (this.state.firstTime === false) {\n      return <this.renderPoints />;\n    } else {\n      return <p>Loading</p>;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}